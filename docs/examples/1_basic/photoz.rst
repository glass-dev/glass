
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/1_basic/photoz.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_1_basic_photoz.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_1_basic_photoz.py:


Photometric redshifts
=====================

This example simulates galaxies with a simple photometric redshift model.

.. GENERATED FROM PYTHON SOURCE LINES 10-16

Setup
-----
Set up a galaxy positions-only GLASS simulation.  It needs very little:
a way to obtain matter angular power spectra (here: CAMB) and a redshift
distribution of galaxies to sample from (here: uniform in volume).  Then add
a model for photometric redshifts with Gaussian errors.

.. GENERATED FROM PYTHON SOURCE LINES 16-58

.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    # these are the GLASS imports: cosmology and the glass meta-module
    from cosmology import LCDM
    from glass import glass

    # also needs camb itself to get the parameter object
    import camb


    # cosmology for the simulation
    cosmo = LCDM(h=0.7, Om=0.3)

    # basic parameters of the simulation
    nside = 128
    lmax = nside

    # galaxy density
    n_arcmin2 = 1e-4

    # photometric redshift error at redshift 0
    phz_sigma_0 = 0.05

    # parametric galaxy redshift distribution
    z = np.linspace(0, 3, 301)
    dndz = n_arcmin2*glass.observations.smail_nz(z, 1.0, 2.2, 1.5)

    # set up CAMB parameters for matter angular power spectrum
    pars = camb.set_params(H0=100*cosmo.h, omch2=cosmo.Om*cosmo.h**2)

    # generators for a galaxies-only simulation
    generators = [
        glass.sim.zspace(z[0], z[-1]+0.01, dz=0.25),
        glass.camb.camb_matter_cl(pars, lmax),
        glass.matter.lognormal_matter(nside),
        glass.galaxies.gal_dist_fullsky(z, dndz),
        glass.galaxies.gal_phz_gausserr(phz_sigma_0),
    ]









.. GENERATED FROM PYTHON SOURCE LINES 59-62

Simulation
----------
Keep all simulated true and photometric redshifts.

.. GENERATED FROM PYTHON SOURCE LINES 62-73

.. code-block:: default


    # arrays for true (ztrue) and photmetric (zphot) redshifts
    ztrue = np.empty(0)
    zphot = np.empty(0)

    # simulate and add galaxies in each matter shell to cube
    for shell in glass.sim.generate(generators):
        ztrue = np.append(ztrue, shell['gal_z'])
        zphot = np.append(zphot, shell['gal_z_phot'])









.. GENERATED FROM PYTHON SOURCE LINES 74-80

Plots
-----
Make a couple of typical photometric redshift plots.

First the :math:`z`-vs-:math:`z` plot across the entire sample.  The simple
Gaussian error model only has the diagonal but no catastrophic outliers.

.. GENERATED FROM PYTHON SOURCE LINES 80-87

.. code-block:: default


    plt.figure(figsize=(5, 5))
    plt.plot(ztrue, zphot, '+k', ms=3, alpha=0.1)
    plt.xlabel(r'$z_{\rm true}$', size=12)
    plt.ylabel(r'$z_{\rm phot}$', size=12)
    plt.show()




.. image-sg:: /examples/1_basic/images/sphx_glr_photoz_001.png
   :alt: photoz
   :srcset: /examples/1_basic/images/sphx_glr_photoz_001.png, /examples/1_basic/images/sphx_glr_photoz_001_2_0x.png 2.0x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 88-91

Now define a number of photometric redshift bins.  They are chosen by the
:func:`~glass.observations.equal_dens_zbins` function to produce the same
number of galaxies in each bin.

.. GENERATED FROM PYTHON SOURCE LINES 91-95

.. code-block:: default


    nbins = 5
    zbins = glass.observations.equal_dens_zbins(z, dndz, nbins)








.. GENERATED FROM PYTHON SOURCE LINES 96-101

After the photometric bins are defined, make histograms of the *true* redshift
distribution :math:`n(z)` using the *photometric* redshifts for binning.

Use the :func:`~glass.observations.tomo_nz_gausserr()` to get the expected
tomographic redshift distributions using the same Gaussian error model.

.. GENERATED FROM PYTHON SOURCE LINES 101-112

.. code-block:: default


    tomo_nz = glass.observations.tomo_nz_gausserr(z, dndz, phz_sigma_0, zbins)
    tomo_nz *= glass.util.ARCMIN2_SPHERE*(z[-1] - z[0])/40

    for (z1, z2), nz in zip(zbins, tomo_nz):
        plt.hist(ztrue[(z1 <= zphot) & (zphot < z2)], bins=40, range=(z[0], z[-1]),
                 histtype='stepfilled', alpha=0.5)
        plt.plot(z, nz, '-k', lw=1, alpha=0.5)
    plt.xlabel('true redshift $z$')
    plt.ylabel('number of galaxies')
    plt.show()



.. image-sg:: /examples/1_basic/images/sphx_glr_photoz_002.png
   :alt: photoz
   :srcset: /examples/1_basic/images/sphx_glr_photoz_002.png, /examples/1_basic/images/sphx_glr_photoz_002_2_0x.png 2.0x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.513 seconds)


.. _sphx_glr_download_examples_1_basic_photoz.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: photoz.py <photoz.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: photoz.ipynb <photoz.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
