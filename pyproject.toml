[build-system]
build-backend = "hatchling.build"
requires = [
    "hatch-vcs",
    "hatchling",
]

[project]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Typed",
]
dependencies = [
    "cosmology>=2022.10.9",
    "gaussiancl>=2022.10.21",
    "healpix>=2022.11.1",
    "healpy>=1.15.0",
    "numpy>=1.22.0",
]
description = "Generator for Large Scale Structure"
dynamic = [
    "version",
]
maintainers = [
    {email = "n.tessore@ucl.ac.uk", name = "Nicolas Tessore"},
]
name = "glass"
readme = "README.md"
requires-python = ">=3.9"
license.file = "LICENSE"

[project.optional-dependencies]
docs = [
    "furo",
    "ipython",
    "matplotlib",
    "nbsphinx",
    "sphinx",
    "sphinx_autodoc_typehints",
    "sphinxcontrib-katex",
]
examples = [
    "camb",
    "glass.ext.camb",
    "jupyter",
    "matplotlib",
]
test = [
    "fitsio",
    "pytest",
    "pytest-cov",
    "pytest-doctestplus",
    "pytest-mock",
    "pytest-rerunfailures",
    "scipy",
]

[project.urls]
Changelog = "https://glass.readthedocs.io/stable/manual/releases.html"
Documentation = "https://glass.readthedocs.io/stable"
Homepage = "https://github.com/glass-dev/glass"
Issues = "https://github.com/glass-dev/glass/issues"

[tool.coverage]
report = {exclude_also = [
    "if typing.TYPE_CHECKING:",
], omit = [
    "glass/_version.py",
], skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = [
    "glass",
]}
paths.source = [
    "src",
    ".nox*/*/lib/python*/site-packages",
]

[tool.hatch]
build.hooks.vcs.version-file = "glass/_version.py"
build.targets.sdist.exclude = [
    ".*",
    "docs/*",
    "examples/*",
    "noxfile.py",
    "tests/*",
]
version.source = "vcs"

[tool.mypy]
disallow_untyped_decorators = false
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
plugins = [
    "numpy.typing.mypy_plugin",
]
strict = true
warn_unreachable = true

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
    "-ra",
    "-v",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
log_cli_level = "DEBUG"
minversion = "6.0"
testpaths = [
    "tests",
]
xfail_strict = true

[tool.ruff]
fix = true
force-exclude = true
show-fixes = true
src = [
    "glass",
]
lint.allowed-confusables = [
    "α",
    "γ",
]
lint.ignore = [
    "COM812", # missing-trailing-comma (ruff-format recommended)
    "D203", # one-blank-line-before-class
    "D212", # blank-line-before-class
    "ISC001", # single-line-implicit-string-concatenation (ruff-format recommended)
    "NPY201", # TODO: numpy2-deprecation
    "RUF003", # ambiguous-unicode-character-comment
]
lint.isort = {known-first-party = [
    "glass",
], section-order = [
    "future",
    "standard-library",
    "third-party",
    "cosmo",
    "first-party",
    "local-folder",
], sections = {"cosmo" = [
    "camb",
    "cosmology",
]}}
lint.per-file-ignores = {"__init__.py" = [
    "F401", # unused-import
], "docs*" = [
    "D100", # undocumented-public-module
    "INP001", # implicit-namespace-package,
], "examples*" = [
    "PLR2004", # magic-value-comparison
    "T201", # print
], "glass*" = [
    "PLR2004", # TODO: magic-value-comparison
], "noxfile.py" = [
    "T201", # print
], "tests*" = [
    "D100", # undocumented-public-module
    "D103", # TODO: undocumented-public-function
    "D104", # undocumented-public-package
    "INP001", # implicit-namespace-package
    "PLR2004", # magic-value-comparison
    "S101", # assert
]}
lint.select = [
    "ALL",
]
lint.mccabe.max-complexity = 18
lint.pydocstyle.convention = "numpy"

[tool.tomlsort]
all = true
in_place = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
overrides."tool.ruff.lint.isort.section-order".inline_arrays = false
